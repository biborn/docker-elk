input {
  file {
    path => "/usr/share/logstash/input-file/sdn.*.xml"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    mode => read
    max_open_files => 1
    codec => multiline
    {
      pattern => "^<\?sdnList .*\>"
      negate => true
      what => "previous"
      auto_flush_interval => 2
      max_lines => 1000000
      max_bytes => "10 MiB"
    }
  }
}

filter {
  xml {
    source => "message"
    target => "xml_content"
    namespaces => {
      "xmlns" => "http://tempuri.org/sdnList.xsd"
    }
  }

  split {
    field => "[xml_content][sdnEntry]"
    add_field => {
      first_name => "%{[xml_content][sdnEntry][firstName]}"
      last_name => "%{[xml_content][sdnEntry][lastName]}"
      sdn_type => "%{[xml_content][sdnEntry][sdnType]}"
    }
  }
  if [sdn_type] != "Individual" {
    drop {}
  }
  split {
    field => "[xml_content][sdnEntry][programList]"
    target => "program_list"
  }
  if [xml_content][sdnEntry][idList] {
    split {
      field => "[xml_content][sdnEntry][idList]"
      target => "id"
    }
    if [id][id] {
      ruby {
        path => "/usr/share/logstash/script/array_to_string.rb"
        script_params => { 
          "filter" => "[id][id]" 
          "return" => "[id]" 
        }
      }
    }
  } 
  if [xml_content][sdnEntry][akaList] {
    split {
      field => "[xml_content][sdnEntry][akaList]"
      target => "alias_name"
    }
    if [alias_name][aka] {
      ruby {
        path => "/usr/share/logstash/script/array_to_string.rb"
        script_params => { 
          "filter" => "[alias_name][aka]" 
          "return" => "[alias_name]" 
        }
      }
    }
  }
  if [xml_content][sdnEntry][addressList] {
    split {
      field => "[xml_content][sdnEntry][addressList]"
      target => "address"
    }
    if [address][address] {
      ruby {
        path => "/usr/share/logstash/script/array_to_string.rb"
        script_params => { 
          "filter" => "[address][address]" 
          "return" => "[address]" 
        }
      }
    }
  }
  if [xml_content][sdnEntry][nationalityList] {
    split {
      field => "[xml_content][sdnEntry][nationalityList]"
      target => "nationality"
    }
    if [nationality][nationality] {
      ruby {
        path => "/usr/share/logstash/script/array_to_string.rb"
        script_params => { 
          "filter" => "[nationality][nationality]" 
          "return" => "[nationality]" 
        }
      }
    }
  }
  if [xml_content][sdnEntry][citizenshipList] {
    split {
      field => "[xml_content][sdnEntry][citizenshipList]"
      target => "citizenship"
    }
    if [citizenship][citizenship] {
      ruby {
        path => "/usr/share/logstash/script/array_to_string.rb"
        script_params => { 
          "filter" => "[citizenship][citizenship]" 
          "return" => "[citizenship]" 
        }
      }
    }
  }
  if [xml_content][sdnEntry][dateOfBirthList] {
    split {
      field => "[xml_content][sdnEntry][dateOfBirthList]"
      target => "dob"
    }
    if [dob][dateOfBirthItem] {
      ruby {
        path => "/usr/share/logstash/script/array_to_string.rb"
        script_params => { 
          "filter" => "[dob][dateOfBirthItem]" 
          "return" => "[dob]" 
        }
      }
    }
  }
  if [xml_content][sdnEntry][placeOfBirthList] {
    split {
      field => "[xml_content][sdnEntry][placeOfBirthList]"
      target => "pob"
    }
    if [pob][placeOfBirthItem] {
      ruby {
        path => "/usr/share/logstash/script/array_to_string.rb"
        script_params => { 
          "filter" => "[pob][placeOfBirthItem]" 
          "return" => "[pob]" 
        }
      }
    }
  }
    
  mutate {
    
    remove_field => ["message", "xml_content", "host"]
  }
}

output {
  stdout { codec => rubydebug }
  elasticsearch {
    index => "sdn-xml"
    hosts => ["elasticsearch:9200"]
  }
}
